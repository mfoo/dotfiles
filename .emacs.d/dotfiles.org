#+TITLE: Martin's Dotfiles
#+AUTHOR: Martin Foot
#+EMAIL: martin.foot@du.co
#+STARTUP: indent

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

#+STARTUP: overview
#+STARTUP: indent
#+STARTUP: inlineimages

#+OPTIONS: toc:3
#+OPTIONS: ^:nil

I'm in the process of adding all of my dotfiles into this document.

I have dotfiles for several applications, each in my dotfiles repository with a one-time setup task for new machines to
symlink all the files from the repository. Recently I started using emacs and shortly after that I
[[https://www.mfoot.com/blog/2015/11/22/literate-emacs-configuration-with-org-mode/][discovered org mode for my emacs configuration files]]. This document is the logical extension - it tracks all of my
config files rather than just the emacs ones, using [[http://orgmode.org/manual/Extracting-source-code.html][org-babel's tangling feature]]. To set up a new machine, I clone my
dotfiles repo, open this file and type =C-v t= (and the symlink =~/.emacs.d= for my emacs config).

* Tmux

I use tmux extensively for terminal multiplexing, preferring it to screen for everything except talking RS232 over
serial ports.

The following settings all end up in =~/.tmux.conf=.

** Prefix key
I set the prefix key to =C-a= a long time ago rather than =C-b= for screen compatibility, and have since gotten used to
typing =C-a= twice if I want =C-a=. I don't recommend making this change if you're new to tmux.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
# Remap the prefix key to Control-a as in GNU Screen.
set -g prefix C-a
unbind C-b

# Also allow us to send C-a to applications running in the shell through C-a
# C-a.
bind C-a send-prefix
#+END_SRC

** Vi keybindings
I use vim a lot, so vim keybindings make sense. One less thing to remember.

*** Pane navigation
 #+BEGIN_SRC conf :tangle ~/.tmux.conf
 bind h select-pane -L
 bind j select-pane -D
 bind k select-pane -U
 bind l select-pane -R
#+END_SRC

*** Resizing windows
#+BEGIN_SRC conf :tangle ~/.tmux.conf
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
#+END_SRC

** Multi-session handling
Normally when you have attach a second tmux session it shrinks the window to the size of the smallest client.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
# Stop the session size from being constrained to that of the smallest
# connected client
setw -g aggressive-resize on
#+END_SRC

** Keypress rates
If you hold down a key, set the amount of time before it starts writing multiple copies of that key to 1 second.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
set -sg escape-time 1
#+END_SRC

** Pane numbering
 Set pane and window numbering to start at 1 rather than 0 since 0 is far away on the keyboard and I jump around by
 pane/window number a lot.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
set -g base-index 1
setw -g pane-base-index 1
#+END_SRC

** Custom function keybindings
When testing new configuration settings it's handy to have =<prefix> r= bound to config reload.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
# Map Prefix r to reload the tmux conf for the current session, useful for
# testing.
bind r source-file ~/.tmux.conf
#+END_SRC

** Colours
#+BEGIN_SRC conf :tangle ~/.tmux.conf
set -g default-terminal screen-256color
#+END_SRC

#+BEGIN_SRC conf :tangle ~/.tmux.conf
 #### COLOUR
 # Solarized color scheme by Ethan Schoonover adapted to tmux settings by
 # Sebastian Tramp (https://github.com/seebi/tmux-colors-solarized)

 # default statusbar colors
 set-option -g status-bg colour235 #base02
 set-option -g status-fg colour136 #yellow
 set-option -g status-attr default

 # default window title colors
 set-window-option -g window-status-fg colour244
 set-window-option -g window-status-bg default
 #set-window-option -g window-status-attr dim

 # active window title colors
 set-window-option -g window-status-current-fg colour166 #orange
 set-window-option -g window-status-current-bg default
 #set-window-option -g window-status-current-attr bright

 # Set windows with activity to use bold fonts
 set -g window-status-activity-attr bold

 # pane border
 set-option -g pane-border-fg colour235 #base02
 set-option -g pane-active-border-fg colour240 #base01

 # message text
 set-option -g message-bg colour235 #base02
 set-option -g message-fg colour166 #orange

 # pane number display
 set-option -g display-panes-active-colour colour33 #blue
 set-option -g display-panes-colour colour166 #orange

 # clock
 set-window-option -g clock-mode-colour colour64 #green

 # Use the proper shell, hopefully zsh
 set-option -g default-shell $SHELL

 # Ensure window splits open a new shell in the CWD
 bind '"' split-window -c "#{pane_current_path}"
 bind % split-window -h -c "#{pane_current_path}"
 bind c new-window -c "#{pane_current_path}"
 #+END_SRC

** TODO Mouse Support
 I disabled mouse support. I don't remember why I did this, presumably it caused problems with selection and
 copy/paste. I should revisit this setting.

#+BEGIN_SRC conf :tangle ~/.tmux.conf
set -g mode-mouse off
#+END_SRC

** Menu bar customisations
 #+BEGIN_SRC conf :tangle ~/.tmux.conf
 # Show the hostname in the left of the status window
 set -g status-left "#h |"
 set -g status-left-length 40
 set -g status-justify centre

 # Allow visual activity notifications from other windows in the session
 setw -g monitor-activity on
 set -g visual-activity on
#+END_SRC

** Unicode support
 #+BEGIN_SRC conf :tangle ~/.tmux.conf
 set -g status-utf8 on
#+END_SRC

* ZSH
I use [[http://www.zsh.org/][ZSH]] a lot. I find its tab completion far superior to bash's, and that's enough reason to use it alone.

** oh-my-zsh
I use [[https://github.com/robbyrussell/oh-my-zsh][oh-my-zsh]] a lot. It has a huge number of features and plugins that make life much easier. using it is
simple. Just source =~/path/to/oh-my-zsh/oh-my-zsh.sh=

 #+BEGIN_SRC conf :tangle ~/.zshrc
 # Path to your oh-my-zsh configuration.
 ZSH=$HOME/.oh-my-zsh
 #+END_SRC


*** Themes and visuals
#+BEGIN_SRC conf :tangle ~/.zshrc
ZSH_THEME="blinks"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"
#+END_SRC

*** Plugins

#+BEGIN_SRC conf :tangle ~/.zshrc
plugins=(
git                     # Add a large number of git aliasses
rails                   # Add rails3 commands rc (rails console), rs (rails server)
bundler                 # Adds be (bundle exec), bu (bundle update) and bi (bundle install)
redis-cli               # Completion for redis-cli
tmux                    # Configuration options for tmux with zsh
mvn                     # Add command line completion for maven
rake
autojump                # Enables autojump if installed
vagrant                 # Adds vagrant command autocompletion
web-search              # Adds support for "google foo" opening a google search
command-not-found       # If a command can't be found, check apt to see which package contains it
gitfast                 # Enable fast zsh git completion
git-extras              # Enable git-extras command completion
jira
)
#+END_SRC

*** The magic
#+BEGIN_SRC conf :tangle ~/.zshrc
source $ZSH/oh-my-zsh.sh
#+END_SRC

** =$TERM=, =$LANG=, and =$PATH=
   #+BEGIN_SRC conf :tangle ~/.zshrc

 # Customize to your needs...
 export TERM=screen-256color

 export LANG=en_GB.utf8

 export PATH=/home/martin/bin/:$PATH

   #+END_SRC

** Autojump
[[https://github.com/joelthelion/autojump][Autojump]] makes life so much easier. I use this many many times a day.

#+BEGIN_SRC conf :tangle ~/.zshrc
[[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && source ~/.autojump/etc/profile.d/autojump.zsh
#+END_SRC

** Comments
Using comments like you can use them in bash (i.e. inline on the command line) requires an option to be set.

#+BEGIN_SRC conf :tangle ~/.zshrc
# Allow comments even in interactive shells
setopt interactive_comments
#+END_SRC

** Custom autocorrect commands

#+BEGIN_SRC conf :tangle ~/.zshrc
# Manually disable autocorrect for some commands
alias rspec='nocorrect rspec '
alias bundle='nocorrect bundle'
alias -g bec='bundle exec cucumber'
alias -g gp='| grep -i'
alias -s rb=vim
alias -s h=vim
alias -s cpp=vim
alias -s log=less -R
alias emacs='emacs -nw'
alias capp='cap production'
alias gcp='git cherry-pick'
#+END_SRC

** Grep configuration
I always want certain options when grepping.

Firstly, make sure we always highlight colours:

#+BEGIN_SRC conf :tangle ~/.zshrc
GREP_OPTIONS=' --color=auto --exclude=*.o'
#+END_SRC

Then let's excluded version control directories from grepping.

#+BEGIN_SRC conf :tangle ~/.zshrc
for PATTERN in .cvs .git .hg .svn docs; do
  GREP_OPTIONS="$GREP_OPTIONS --exclude-dir=$PATTERN"
done
#+END_SRC

Make it so:

#+BEGIN_SRC conf :tangle ~/.zshrc
export GREP_OPTIONS
#+END_SRC

** Extracting files
I am woefully bad at remembering the options to =tar=. Here's a useful function I found on [[https://indlovu.wordpress.com/2010/07/26/useful-bash-functions][StackOverflow]].

#+BEGIN_SRC conf :tangle ~/.zshrc
function extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1         ;;
      *.tar.gz)    tar xzf $1         ;;
      *.bz2)       bunzip2 $1         ;;
      *.rar)       rar x $1           ;;
      *.gz)        gunzip $1          ;;
      *.tar)       tar xf $1          ;;
      *.tbz2)      tar xjf $1         ;;
      *.tgz)       tar xzf $1         ;;
      *.zip)       unzip $1           ;;
      *.Z)         uncompress $1      ;;
      *.7z)        7z x $1            ;;
      *)           echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
#+END_SRC

** Terminal locking
I always manage to hit the terminal locking =C-s= and =C-q= characters, so I just disable them.

#+BEGIN_SRC conf :tangle ~/.zshrc
stty start undef stop undef
#+END_SRC

** RVM
#+BEGIN_SRC conf :tangle ~/.zshrc
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
#+END_SRC
* Rubygems
This file defines parameters for rubygems. These settings all end up in =~/.gemrc=.

#+BEGIN_SRC conf :tangle ~/.gemrc
gem: --no-rdoc --no-ri --local-install
#+END_SRC

* Git
This is the contents of =~/.gitconfig=

#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
  name = Martin Foot
  email = martin@mfoot.com
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
[core]
  autocrlf = false
  editor = emacs
  excludesfile = ~/.gitignore
  whitespace = trailing-space,space-before-tab
[advice]
  statusHints = false
[diff]
  renames = copies
[branch]
  autosetupmerge = true
[push]
  default = current
[rerere]
  enabled = true
[merge]
  stat = true
#+END_SRC

* Xdefaults

#+BEGIN_SRC conf :tangle ~/.Xdefaults
!-------------------------------------------------------------------------------
! Xft settings
!-------------------------------------------------------------------------------

Xft.dpi:                    96
Xft.antialias:              false
Xft.rgba:                   rgb
Xft.hinting:                true
Xft.hintstyle:              hintslight

!-------------------------------------------------------------------------------
! URxvt settings
! Colours lifted from Solarized (http://ethanschoonover.com/solarized)
! More info at:
! http://pod.tst.eu/http://cvs.schmorp.de/rxvt-unicode/doc/rxvt.1.pod
!-------------------------------------------------------------------------------

URxvt.depth:                32
URxvt.geometry:             90x30
URxvt.transparent:          false
URxvt.fading:               0
! URxvt.urgentOnBell:         true
! URxvt.visualBell:           true
URxvt.loginShell:           true
URxvt.saveLines:            50
URxvt.internalBorder:       3
URxvt.lineSpace:            0

! Fonts
URxvt.allow_bold:           false
!URxvt.font:                 -*-terminus-medium-r-normal-*-12-120-72-72-c-60-iso8859-1
!URxvt*font: xft:Monospace:pixelsize=14
!URxvt*boldFont: xft:Monospace:pixelsize=14

URxvt*font: xft:Inconsolata\-dz for Powerline:pixelsize=14
URxvt*boldFont: xft:Inconsolata-dz-Powerline:pixelsize=12


! Fix font space
!URxvt*letterSpace: -1

! Scrollbar
URxvt.scrollStyle:          rxvt
URxvt.scrollBar:            false

! Perl extensions
URxvt.perl-ext-common:      default,matcher
URxvt.matcher.button:       1
URxvt.urlLauncher:          firefox

! Cursor
URxvt.cursorBlink:          true
URxvt.cursorColor:          #657b83
URxvt.cursorUnderline:      false

! Pointer
URxvt.pointerBlank:         true

!!Source http://github.com/altercation/solarized

*background: #002b36
*foreground: #657b83
!!*fading: 40
*fadeColor: #002b36
*cursorColor: #93a1a1
*pointerColorBackground: #586e75
*pointerColorForeground: #93a1a1

!! black dark/light
*color0: #073642
*color8: #002b36

!! red dark/light
*color1: #dc322f
*color9: #cb4b16

!! green dark/light
*color2: #859900
*color10: #586e75

!! yellow dark/light
*color3: #b58900
*color11: #657b83

!! blue dark/light
*color4: #268bd2
*color12: #839496

!! magenta dark/light
*color5: #d33682
*color13: #6c71c4

!! cyan dark/light
*color6: #2aa198
*color14: #93a1a1

!! white dark/light
*color7: #eee8d5
*color15: #fdf6e3

#+END_SRC

* Xresources

#+BEGIN_SRC conf :tangle ~/.Xresources
!! drop in Solarized colorscheme for Xresources/Xdefaults

!!SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L*A*B      RGB         HSB
!!--------- ------- ---- -------  ----------- ---------- ----------- -----------
!!base03    #002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21
!!base02    #073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26
!!base01    #586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46
!!base00    #657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51
!!base0     #839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59
!!base1     #93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63
!!base2     #eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93
!!base3     #fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99
!!yellow    #b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71
!!orange    #cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80
!!red       #dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86
!!magenta   #d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83
!!violet    #6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77
!!blue      #268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82
!!cyan      #2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63
!!green     #859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60

#define S_base03        #002b36
#define S_base02        #073642
#define S_base01        #586e75
#define S_base00        #657b83
#define S_base0         #839496
#define S_base1         #93a1a1
#define S_base2         #eee8d5
#define S_base3         #fdf6e3
#define S_yellow        #b58900
#define S_orange        #cb4b16
#define S_red           #dc322f
#define S_magenta       #d33682
#define S_violet        #6c71c4
#define S_blue          #268bd2
#define S_cyan          #2aa198
#define S_green         #859900

*background:            S_base03
*foreground:            S_base00
*fading:                40
*fadeColor:             S_base03
*cursorColor:           S_base1
*pointerColorBackground:S_base01
*pointerColorForeground:S_base1

!! black dark/light
*color0:                S_base02
*color8:                S_base03

!! red dark/light
*color1:                S_red
*color9:                S_orange

!! green dark/light
*color2:                S_green
*color10:               S_base01

!! yellow dark/light
*color3:                S_yellow
*color11:               S_base00

!! blue dark/light
*color4:                S_blue
*color12:               S_base0

!! magenta dark/light
*color5:                S_magenta
*color13:               S_violet

!! cyan dark/light
*color6:                S_cyan
*color14:               S_base1

!! white dark/light
*color7:                S_base2
*color15:               S_base3

#+END_SRC
